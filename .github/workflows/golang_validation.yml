name: Golang validation

permissions:
  contents: read
  actions: write

on:
  workflow_dispatch:
  pull_request:
    paths:
    - 'packages/golang/build.sh'
    - 'scripts/build/setup/termux_setup_golang.sh'

jobs:
  scan_golang_pkgs:
    name: Scan Package depends on golang
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.scan.outputs.packages }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Scan Packages for termux_setup_golang
        id: scan
        run: |
          readarray -t TERMUX_PACKAGE_DIRECTORIES < <(jq --raw-output 'del(.pkg_format) | keys | .[]' repo.json)
          readarray -t PACKAGES < <(grep -rl termux_setup_golang --include=build.sh "${TERMUX_PACKAGE_DIRECTORIES[@]}" | cut -d/ -f2 | sort -u || :) || :
          echo "packages=$(printf '%s\n' "${PACKAGES[@]}" | jq -R . | jq -s . | jq -c)" >> "$GITHUB_OUTPUT"
  golang_validation:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/termux/package-builder:latest
      volumes:
        - ${{ github.workspace }}:/home/builder/termux-packages
      env:
        HOME: /home/builder
        PWD: /home/builder/termux-packages
        TERMUX_PKGS__BUILD__REPO_ROOT_DIR: /home/builder/termux-packages
      options: --user builder --workdir /home/builder/termux-packages
    needs: scan_golang_pkgs
    strategy:
      matrix:
#        target_arch: [aarch64, arm, i686, x86_64]
        package: ${{ fromJSON(needs.scan_golang_pkgs.outputs.packages) }}
      fail-fast: false
    steps:
    - name: Clone repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    # - name: Set process id limit for 32-bit builds depending on aosp-libs
    #   run: echo 65535 | sudo tee /proc/sys/kernel/pid_max
    # - name: Prepare environment
    #   run: |
    #     true || ./scripts/setup-ubuntu.sh
    #     true || ./scripts/setup-android-sdk.sh
    #     true || sudo apt install ninja-build
    #     ./scripts/free-space.sh
    - name: Golang validation - ${{ matrix.package }}
      run: |
        cd /home/builder/termux-packages && ./build-package.sh -I -C -a "all" "${{ matrix.package }}" || exit 1
    - name: Upload report artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: report-${{ matrix.package }}
        path: /tmp/golang-validation-report.txt
